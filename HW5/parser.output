Terminals unused in grammar

   L_ASSOC


Rules useless in parser due to conflicts

   46 CallHeader: %empty


State 14 conflicts: 1 shift/reduce
State 17 conflicts: 1 shift/reduce
State 24 conflicts: 1 shift/reduce
State 34 conflicts: 1 shift/reduce
State 38 conflicts: 1 shift/reduce
State 41 conflicts: 1 shift/reduce
State 42 conflicts: 1 shift/reduce
State 43 conflicts: 1 shift/reduce
State 45 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 62 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 72 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 80 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 110 conflicts: 1 shift/reduce
State 119 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Prog_init Funcs

    2 Prog_init: %empty

    3 Funcs: FuncDecl Funcs
    4      | %empty

    5 FuncDecl: FuncHead FuncState

    6 FuncHead: RetType ID LPAREN Func_Scope_init Formals RPAREN

    7 Func_Scope_init: %empty

    8 FuncState: LBRACE Statements RBRACE

    9 RetType: Type
   10        | VOID

   11 Formals: FormalsList
   12        | %empty

   13 FormalsList: FormalDecl
   14            | FormalDecl COMMA FormalsList

   15 FormalDecl: Type ID

   16 Statements: Statement
   17           | Statements Statement

   18 Statement: LBRACE Scope_init Statements RBRACE
   19          | Type ID SC
   20          | Type ID ASSIGN Exp SC
   21          | ID ASSIGN Exp SC
   22          | Call SC
   23          | RETURN SC
   24          | RETURN Exp SC
   25          | IF LPAREN BoolExp RPAREN Scope_init Statement Scope_end PossibleElse
   26          | WHILE LPAREN BoolExp RPAREN While_Scope_init Statement
   27          | BREAK SC
   28          | SwitchHead CaseList RBRACE SC

   29 SwitchHead: SWITCH LPAREN NumExp RPAREN LBRACE

   30 PossibleElse: %empty
   31             | ELSE Scope_init Statement Scope_end

   32 NumExp: Exp

   33 BoolExp: Exp

   34 While_Scope_init: %empty

   35 Scope_init: %empty

   36 Scope_end: %empty

   37 CaseList: CaseList CaseStatement
   38         | CaseStatement

   39 CaseStatement: CaseDec Statements
   40              | CaseDec

   41 CaseDec: CASE NUM COLON
   42        | CASE NUM B COLON
   43        | DEFAULT COLON

   44 Call: CallHeader ID LPAREN ExpList RPAREN
   45     | CallHeader ID LPAREN RPAREN

   46 CallHeader: %empty

   47 ExpList: Exp
   48        | Exp COMMA ExpList

   49 Type: INT
   50     | BYTE
   51     | BOOL

   52 Exp: Exp AND Exp
   53    | Exp OR Exp
   54    | Exp RELOP Exp
   55    | Exp BINOP Exp
   56    | LPAREN Exp RPAREN
   57    | ID
   58    | Call
   59    | NUM
   60    | NUM B
   61    | STRING
   62    | TRUE
   63    | FALSE
   64    | NOT Exp


Terminals, with rules where they appear

$end (0) 0
error (256)
VOID (258) 10
INT (259) 49
BYTE (260) 50
BOOL (261) 51
TRUE (262) 62
FALSE (263) 63
RETURN (264) 23 24
IF (265) 25
WHILE (266) 26
SWITCH (267) 29
CASE (268) 41 42
BREAK (269) 27
DEFAULT (270) 43
COLON (271) 41 42 43
SC (272) 19 20 21 22 23 24 27 28
COMMA (273) 14 48
ASSIGN (274) 20 21
OR (275) 53
AND (276) 52
NOT (277) 64
RELOP (278) 54
BINOP (279) 55
ID (280) 6 15 19 20 21 44 45 57
NUM (281) 41 42 59 60
STRING (282) 61
B (283) 42 60
LPAREN (284) 6 25 26 29 44 45 56
RPAREN (285) 6 25 26 29 44 45 56
LBRACE (286) 8 18 29
RBRACE (287) 8 18 28
L_ASSOC (288)
PRIO_REGIF (289)
ELSE (290) 31
PRIO_IFELSE (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
Program (38)
    on left: 1, on right: 0
Prog_init (39)
    on left: 2, on right: 1
Funcs (40)
    on left: 3 4, on right: 1 3
FuncDecl (41)
    on left: 5, on right: 3
FuncHead (42)
    on left: 6, on right: 5
Func_Scope_init (43)
    on left: 7, on right: 6
FuncState (44)
    on left: 8, on right: 5
RetType (45)
    on left: 9 10, on right: 6
Formals (46)
    on left: 11 12, on right: 6
FormalsList (47)
    on left: 13 14, on right: 11 14
FormalDecl (48)
    on left: 15, on right: 13 14
Statements (49)
    on left: 16 17, on right: 8 17 18 39
Statement (50)
    on left: 18 19 20 21 22 23 24 25 26 27 28, on right: 16 17 25 26
    31
SwitchHead (51)
    on left: 29, on right: 28
PossibleElse (52)
    on left: 30 31, on right: 25
NumExp (53)
    on left: 32, on right: 29
BoolExp (54)
    on left: 33, on right: 25 26
While_Scope_init (55)
    on left: 34, on right: 26
Scope_init (56)
    on left: 35, on right: 18 25 31
Scope_end (57)
    on left: 36, on right: 25 31
CaseList (58)
    on left: 37 38, on right: 28 37
CaseStatement (59)
    on left: 39 40, on right: 37 38
CaseDec (60)
    on left: 41 42 43, on right: 39 40
Call (61)
    on left: 44 45, on right: 22 58
CallHeader (62)
    on left: 46, on right: 44 45
ExpList (63)
    on left: 47 48, on right: 44 48
Type (64)
    on left: 49 50 51, on right: 9 15 19 20
Exp (65)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63 64, on right: 20 21
    24 32 33 47 48 52 53 54 55 56 64


State 0

    0 $accept: . Program $end

    $default  reduce using rule 2 (Prog_init)

    Program    go to state 1
    Prog_init  go to state 2


State 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


State 2

    1 Program: Prog_init . Funcs

    VOID  shift, and go to state 4
    INT   shift, and go to state 5
    BYTE  shift, and go to state 6
    BOOL  shift, and go to state 7

    $default  reduce using rule 4 (Funcs)

    Funcs     go to state 8
    FuncDecl  go to state 9
    FuncHead  go to state 10
    RetType   go to state 11
    Type      go to state 12


State 3

    0 $accept: Program $end .

    $default  accept


State 4

   10 RetType: VOID .

    $default  reduce using rule 10 (RetType)


State 5

   49 Type: INT .

    $default  reduce using rule 49 (Type)


State 6

   50 Type: BYTE .

    $default  reduce using rule 50 (Type)


State 7

   51 Type: BOOL .

    $default  reduce using rule 51 (Type)


State 8

    1 Program: Prog_init Funcs .

    $default  reduce using rule 1 (Program)


State 9

    3 Funcs: FuncDecl . Funcs

    VOID  shift, and go to state 4
    INT   shift, and go to state 5
    BYTE  shift, and go to state 6
    BOOL  shift, and go to state 7

    $default  reduce using rule 4 (Funcs)

    Funcs     go to state 13
    FuncDecl  go to state 9
    FuncHead  go to state 10
    RetType   go to state 11
    Type      go to state 12


State 10

    5 FuncDecl: FuncHead . FuncState

    LBRACE  shift, and go to state 14

    FuncState  go to state 15


State 11

    6 FuncHead: RetType . ID LPAREN Func_Scope_init Formals RPAREN

    ID  shift, and go to state 16


State 12

    9 RetType: Type .

    $default  reduce using rule 9 (RetType)


State 13

    3 Funcs: FuncDecl Funcs .

    $default  reduce using rule 3 (Funcs)


State 14

    8 FuncState: LBRACE . Statements RBRACE

    INT     shift, and go to state 5
    BYTE    shift, and go to state 6
    BOOL    shift, and go to state 7
    RETURN  shift, and go to state 17
    IF      shift, and go to state 18
    WHILE   shift, and go to state 19
    SWITCH  shift, and go to state 20
    BREAK   shift, and go to state 21
    ID      shift, and go to state 22
    LBRACE  shift, and go to state 23

    ID  [reduce using rule 46 (CallHeader)]

    Statements  go to state 24
    Statement   go to state 25
    SwitchHead  go to state 26
    Call        go to state 27
    CallHeader  go to state 28
    Type        go to state 29


State 15

    5 FuncDecl: FuncHead FuncState .

    $default  reduce using rule 5 (FuncDecl)


State 16

    6 FuncHead: RetType ID . LPAREN Func_Scope_init Formals RPAREN

    LPAREN  shift, and go to state 30


State 17

   23 Statement: RETURN . SC
   24          | RETURN . Exp SC

    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    SC      shift, and go to state 33
    NOT     shift, and go to state 34
    ID      shift, and go to state 35
    NUM     shift, and go to state 36
    STRING  shift, and go to state 37
    LPAREN  shift, and go to state 38

    ID  [reduce using rule 46 (CallHeader)]

    Call        go to state 39
    CallHeader  go to state 28
    Exp         go to state 40


State 18

   25 Statement: IF . LPAREN BoolExp RPAREN Scope_init Statement Scope_end PossibleElse

    LPAREN  shift, and go to state 41


State 19

   26 Statement: WHILE . LPAREN BoolExp RPAREN While_Scope_init Statement

    LPAREN  shift, and go to state 42


State 20

   29 SwitchHead: SWITCH . LPAREN NumExp RPAREN LBRACE

    LPAREN  shift, and go to state 43


State 21

   27 Statement: BREAK . SC

    SC  shift, and go to state 44


State 22

   21 Statement: ID . ASSIGN Exp SC

    ASSIGN  shift, and go to state 45


State 23

   18 Statement: LBRACE . Scope_init Statements RBRACE

    $default  reduce using rule 35 (Scope_init)

    Scope_init  go to state 46


State 24

    8 FuncState: LBRACE Statements . RBRACE
   17 Statements: Statements . Statement

    INT     shift, and go to state 5
    BYTE    shift, and go to state 6
    BOOL    shift, and go to state 7
    RETURN  shift, and go to state 17
    IF      shift, and go to state 18
    WHILE   shift, and go to state 19
    SWITCH  shift, and go to state 20
    BREAK   shift, and go to state 21
    ID      shift, and go to state 22
    LBRACE  shift, and go to state 23
    RBRACE  shift, and go to state 47

    ID  [reduce using rule 46 (CallHeader)]

    Statement   go to state 48
    SwitchHead  go to state 26
    Call        go to state 27
    CallHeader  go to state 28
    Type        go to state 29


State 25

   16 Statements: Statement .

    $default  reduce using rule 16 (Statements)


State 26

   28 Statement: SwitchHead . CaseList RBRACE SC

    CASE     shift, and go to state 49
    DEFAULT  shift, and go to state 50

    CaseList       go to state 51
    CaseStatement  go to state 52
    CaseDec        go to state 53


State 27

   22 Statement: Call . SC

    SC  shift, and go to state 54


State 28

   44 Call: CallHeader . ID LPAREN ExpList RPAREN
   45     | CallHeader . ID LPAREN RPAREN

    ID  shift, and go to state 55


State 29

   19 Statement: Type . ID SC
   20          | Type . ID ASSIGN Exp SC

    ID  shift, and go to state 56


State 30

    6 FuncHead: RetType ID LPAREN . Func_Scope_init Formals RPAREN

    $default  reduce using rule 7 (Func_Scope_init)

    Func_Scope_init  go to state 57


State 31

   62 Exp: TRUE .

    $default  reduce using rule 62 (Exp)


State 32

   63 Exp: FALSE .

    $default  reduce using rule 63 (Exp)


State 33

   23 Statement: RETURN SC .

    $default  reduce using rule 23 (Statement)


State 34

   64 Exp: NOT . Exp

    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    NOT     shift, and go to state 34
    ID      shift, and go to state 35
    NUM     shift, and go to state 36
    STRING  shift, and go to state 37
    LPAREN  shift, and go to state 38

    ID  [reduce using rule 46 (CallHeader)]

    Call        go to state 39
    CallHeader  go to state 28
    Exp         go to state 58


State 35

   57 Exp: ID .

    $default  reduce using rule 57 (Exp)


State 36

   59 Exp: NUM .
   60    | NUM . B

    B  shift, and go to state 59

    $default  reduce using rule 59 (Exp)


State 37

   61 Exp: STRING .

    $default  reduce using rule 61 (Exp)


State 38

   56 Exp: LPAREN . Exp RPAREN

    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    NOT     shift, and go to state 34
    ID      shift, and go to state 35
    NUM     shift, and go to state 36
    STRING  shift, and go to state 37
    LPAREN  shift, and go to state 38

    ID  [reduce using rule 46 (CallHeader)]

    Call        go to state 39
    CallHeader  go to state 28
    Exp         go to state 60


State 39

   58 Exp: Call .

    $default  reduce using rule 58 (Exp)


State 40

   24 Statement: RETURN Exp . SC
   52 Exp: Exp . AND Exp
   53    | Exp . OR Exp
   54    | Exp . RELOP Exp
   55    | Exp . BINOP Exp

    SC     shift, and go to state 61
    OR     shift, and go to state 62
    AND    shift, and go to state 63
    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65


State 41

   25 Statement: IF LPAREN . BoolExp RPAREN Scope_init Statement Scope_end PossibleElse

    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    NOT     shift, and go to state 34
    ID      shift, and go to state 35
    NUM     shift, and go to state 36
    STRING  shift, and go to state 37
    LPAREN  shift, and go to state 38

    ID  [reduce using rule 46 (CallHeader)]

    BoolExp     go to state 66
    Call        go to state 39
    CallHeader  go to state 28
    Exp         go to state 67


State 42

   26 Statement: WHILE LPAREN . BoolExp RPAREN While_Scope_init Statement

    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    NOT     shift, and go to state 34
    ID      shift, and go to state 35
    NUM     shift, and go to state 36
    STRING  shift, and go to state 37
    LPAREN  shift, and go to state 38

    ID  [reduce using rule 46 (CallHeader)]

    BoolExp     go to state 68
    Call        go to state 39
    CallHeader  go to state 28
    Exp         go to state 67


State 43

   29 SwitchHead: SWITCH LPAREN . NumExp RPAREN LBRACE

    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    NOT     shift, and go to state 34
    ID      shift, and go to state 35
    NUM     shift, and go to state 36
    STRING  shift, and go to state 37
    LPAREN  shift, and go to state 38

    ID  [reduce using rule 46 (CallHeader)]

    NumExp      go to state 69
    Call        go to state 39
    CallHeader  go to state 28
    Exp         go to state 70


State 44

   27 Statement: BREAK SC .

    $default  reduce using rule 27 (Statement)


State 45

   21 Statement: ID ASSIGN . Exp SC

    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    NOT     shift, and go to state 34
    ID      shift, and go to state 35
    NUM     shift, and go to state 36
    STRING  shift, and go to state 37
    LPAREN  shift, and go to state 38

    ID  [reduce using rule 46 (CallHeader)]

    Call        go to state 39
    CallHeader  go to state 28
    Exp         go to state 71


State 46

   18 Statement: LBRACE Scope_init . Statements RBRACE

    INT     shift, and go to state 5
    BYTE    shift, and go to state 6
    BOOL    shift, and go to state 7
    RETURN  shift, and go to state 17
    IF      shift, and go to state 18
    WHILE   shift, and go to state 19
    SWITCH  shift, and go to state 20
    BREAK   shift, and go to state 21
    ID      shift, and go to state 22
    LBRACE  shift, and go to state 23

    ID  [reduce using rule 46 (CallHeader)]

    Statements  go to state 72
    Statement   go to state 25
    SwitchHead  go to state 26
    Call        go to state 27
    CallHeader  go to state 28
    Type        go to state 29


State 47

    8 FuncState: LBRACE Statements RBRACE .

    $default  reduce using rule 8 (FuncState)


State 48

   17 Statements: Statements Statement .

    $default  reduce using rule 17 (Statements)


State 49

   41 CaseDec: CASE . NUM COLON
   42        | CASE . NUM B COLON

    NUM  shift, and go to state 73


State 50

   43 CaseDec: DEFAULT . COLON

    COLON  shift, and go to state 74


State 51

   28 Statement: SwitchHead CaseList . RBRACE SC
   37 CaseList: CaseList . CaseStatement

    CASE     shift, and go to state 49
    DEFAULT  shift, and go to state 50
    RBRACE   shift, and go to state 75

    CaseStatement  go to state 76
    CaseDec        go to state 53


State 52

   38 CaseList: CaseStatement .

    $default  reduce using rule 38 (CaseList)


State 53

   39 CaseStatement: CaseDec . Statements
   40              | CaseDec .

    INT     shift, and go to state 5
    BYTE    shift, and go to state 6
    BOOL    shift, and go to state 7
    RETURN  shift, and go to state 17
    IF      shift, and go to state 18
    WHILE   shift, and go to state 19
    SWITCH  shift, and go to state 20
    BREAK   shift, and go to state 21
    ID      shift, and go to state 22
    LBRACE  shift, and go to state 23

    ID        [reduce using rule 46 (CallHeader)]
    $default  reduce using rule 40 (CaseStatement)

    Statements  go to state 77
    Statement   go to state 25
    SwitchHead  go to state 26
    Call        go to state 27
    CallHeader  go to state 28
    Type        go to state 29


State 54

   22 Statement: Call SC .

    $default  reduce using rule 22 (Statement)


State 55

   44 Call: CallHeader ID . LPAREN ExpList RPAREN
   45     | CallHeader ID . LPAREN RPAREN

    LPAREN  shift, and go to state 78


State 56

   19 Statement: Type ID . SC
   20          | Type ID . ASSIGN Exp SC

    SC      shift, and go to state 79
    ASSIGN  shift, and go to state 80


State 57

    6 FuncHead: RetType ID LPAREN Func_Scope_init . Formals RPAREN

    INT   shift, and go to state 5
    BYTE  shift, and go to state 6
    BOOL  shift, and go to state 7

    $default  reduce using rule 12 (Formals)

    Formals      go to state 81
    FormalsList  go to state 82
    FormalDecl   go to state 83
    Type         go to state 84


State 58

   52 Exp: Exp . AND Exp
   53    | Exp . OR Exp
   54    | Exp . RELOP Exp
   55    | Exp . BINOP Exp
   64    | NOT Exp .

    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65

    $default  reduce using rule 64 (Exp)


State 59

   60 Exp: NUM B .

    $default  reduce using rule 60 (Exp)


State 60

   52 Exp: Exp . AND Exp
   53    | Exp . OR Exp
   54    | Exp . RELOP Exp
   55    | Exp . BINOP Exp
   56    | LPAREN Exp . RPAREN

    OR      shift, and go to state 62
    AND     shift, and go to state 63
    RELOP   shift, and go to state 64
    BINOP   shift, and go to state 65
    RPAREN  shift, and go to state 85


State 61

   24 Statement: RETURN Exp SC .

    $default  reduce using rule 24 (Statement)


State 62

   53 Exp: Exp OR . Exp

    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    NOT     shift, and go to state 34
    ID      shift, and go to state 35
    NUM     shift, and go to state 36
    STRING  shift, and go to state 37
    LPAREN  shift, and go to state 38

    ID  [reduce using rule 46 (CallHeader)]

    Call        go to state 39
    CallHeader  go to state 28
    Exp         go to state 86


State 63

   52 Exp: Exp AND . Exp

    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    NOT     shift, and go to state 34
    ID      shift, and go to state 35
    NUM     shift, and go to state 36
    STRING  shift, and go to state 37
    LPAREN  shift, and go to state 38

    ID  [reduce using rule 46 (CallHeader)]

    Call        go to state 39
    CallHeader  go to state 28
    Exp         go to state 87


State 64

   54 Exp: Exp RELOP . Exp

    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    NOT     shift, and go to state 34
    ID      shift, and go to state 35
    NUM     shift, and go to state 36
    STRING  shift, and go to state 37
    LPAREN  shift, and go to state 38

    ID  [reduce using rule 46 (CallHeader)]

    Call        go to state 39
    CallHeader  go to state 28
    Exp         go to state 88


State 65

   55 Exp: Exp BINOP . Exp

    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    NOT     shift, and go to state 34
    ID      shift, and go to state 35
    NUM     shift, and go to state 36
    STRING  shift, and go to state 37
    LPAREN  shift, and go to state 38

    ID  [reduce using rule 46 (CallHeader)]

    Call        go to state 39
    CallHeader  go to state 28
    Exp         go to state 89


State 66

   25 Statement: IF LPAREN BoolExp . RPAREN Scope_init Statement Scope_end PossibleElse

    RPAREN  shift, and go to state 90


State 67

   33 BoolExp: Exp .
   52 Exp: Exp . AND Exp
   53    | Exp . OR Exp
   54    | Exp . RELOP Exp
   55    | Exp . BINOP Exp

    OR     shift, and go to state 62
    AND    shift, and go to state 63
    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65

    $default  reduce using rule 33 (BoolExp)


State 68

   26 Statement: WHILE LPAREN BoolExp . RPAREN While_Scope_init Statement

    RPAREN  shift, and go to state 91


State 69

   29 SwitchHead: SWITCH LPAREN NumExp . RPAREN LBRACE

    RPAREN  shift, and go to state 92


State 70

   32 NumExp: Exp .
   52 Exp: Exp . AND Exp
   53    | Exp . OR Exp
   54    | Exp . RELOP Exp
   55    | Exp . BINOP Exp

    OR     shift, and go to state 62
    AND    shift, and go to state 63
    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65

    $default  reduce using rule 32 (NumExp)


State 71

   21 Statement: ID ASSIGN Exp . SC
   52 Exp: Exp . AND Exp
   53    | Exp . OR Exp
   54    | Exp . RELOP Exp
   55    | Exp . BINOP Exp

    SC     shift, and go to state 93
    OR     shift, and go to state 62
    AND    shift, and go to state 63
    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65


State 72

   17 Statements: Statements . Statement
   18 Statement: LBRACE Scope_init Statements . RBRACE

    INT     shift, and go to state 5
    BYTE    shift, and go to state 6
    BOOL    shift, and go to state 7
    RETURN  shift, and go to state 17
    IF      shift, and go to state 18
    WHILE   shift, and go to state 19
    SWITCH  shift, and go to state 20
    BREAK   shift, and go to state 21
    ID      shift, and go to state 22
    LBRACE  shift, and go to state 23
    RBRACE  shift, and go to state 94

    ID  [reduce using rule 46 (CallHeader)]

    Statement   go to state 48
    SwitchHead  go to state 26
    Call        go to state 27
    CallHeader  go to state 28
    Type        go to state 29


State 73

   41 CaseDec: CASE NUM . COLON
   42        | CASE NUM . B COLON

    COLON  shift, and go to state 95
    B      shift, and go to state 96


State 74

   43 CaseDec: DEFAULT COLON .

    $default  reduce using rule 43 (CaseDec)


State 75

   28 Statement: SwitchHead CaseList RBRACE . SC

    SC  shift, and go to state 97


State 76

   37 CaseList: CaseList CaseStatement .

    $default  reduce using rule 37 (CaseList)


State 77

   17 Statements: Statements . Statement
   39 CaseStatement: CaseDec Statements .

    INT     shift, and go to state 5
    BYTE    shift, and go to state 6
    BOOL    shift, and go to state 7
    RETURN  shift, and go to state 17
    IF      shift, and go to state 18
    WHILE   shift, and go to state 19
    SWITCH  shift, and go to state 20
    BREAK   shift, and go to state 21
    ID      shift, and go to state 22
    LBRACE  shift, and go to state 23

    ID        [reduce using rule 46 (CallHeader)]
    $default  reduce using rule 39 (CaseStatement)

    Statement   go to state 48
    SwitchHead  go to state 26
    Call        go to state 27
    CallHeader  go to state 28
    Type        go to state 29


State 78

   44 Call: CallHeader ID LPAREN . ExpList RPAREN
   45     | CallHeader ID LPAREN . RPAREN

    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    NOT     shift, and go to state 34
    ID      shift, and go to state 35
    NUM     shift, and go to state 36
    STRING  shift, and go to state 37
    LPAREN  shift, and go to state 38
    RPAREN  shift, and go to state 98

    ID  [reduce using rule 46 (CallHeader)]

    Call        go to state 39
    CallHeader  go to state 28
    ExpList     go to state 99
    Exp         go to state 100


State 79

   19 Statement: Type ID SC .

    $default  reduce using rule 19 (Statement)


State 80

   20 Statement: Type ID ASSIGN . Exp SC

    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    NOT     shift, and go to state 34
    ID      shift, and go to state 35
    NUM     shift, and go to state 36
    STRING  shift, and go to state 37
    LPAREN  shift, and go to state 38

    ID  [reduce using rule 46 (CallHeader)]

    Call        go to state 39
    CallHeader  go to state 28
    Exp         go to state 101


State 81

    6 FuncHead: RetType ID LPAREN Func_Scope_init Formals . RPAREN

    RPAREN  shift, and go to state 102


State 82

   11 Formals: FormalsList .

    $default  reduce using rule 11 (Formals)


State 83

   13 FormalsList: FormalDecl .
   14            | FormalDecl . COMMA FormalsList

    COMMA  shift, and go to state 103

    $default  reduce using rule 13 (FormalsList)


State 84

   15 FormalDecl: Type . ID

    ID  shift, and go to state 104


State 85

   56 Exp: LPAREN Exp RPAREN .

    $default  reduce using rule 56 (Exp)


State 86

   52 Exp: Exp . AND Exp
   53    | Exp . OR Exp
   53    | Exp OR Exp .
   54    | Exp . RELOP Exp
   55    | Exp . BINOP Exp

    AND    shift, and go to state 63
    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65

    $default  reduce using rule 53 (Exp)


State 87

   52 Exp: Exp . AND Exp
   52    | Exp AND Exp .
   53    | Exp . OR Exp
   54    | Exp . RELOP Exp
   55    | Exp . BINOP Exp

    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65

    $default  reduce using rule 52 (Exp)


State 88

   52 Exp: Exp . AND Exp
   53    | Exp . OR Exp
   54    | Exp . RELOP Exp
   54    | Exp RELOP Exp .
   55    | Exp . BINOP Exp

    BINOP  shift, and go to state 65

    $default  reduce using rule 54 (Exp)


State 89

   52 Exp: Exp . AND Exp
   53    | Exp . OR Exp
   54    | Exp . RELOP Exp
   55    | Exp . BINOP Exp
   55    | Exp BINOP Exp .

    $default  reduce using rule 55 (Exp)


State 90

   25 Statement: IF LPAREN BoolExp RPAREN . Scope_init Statement Scope_end PossibleElse

    $default  reduce using rule 35 (Scope_init)

    Scope_init  go to state 105


State 91

   26 Statement: WHILE LPAREN BoolExp RPAREN . While_Scope_init Statement

    $default  reduce using rule 34 (While_Scope_init)

    While_Scope_init  go to state 106


State 92

   29 SwitchHead: SWITCH LPAREN NumExp RPAREN . LBRACE

    LBRACE  shift, and go to state 107


State 93

   21 Statement: ID ASSIGN Exp SC .

    $default  reduce using rule 21 (Statement)


State 94

   18 Statement: LBRACE Scope_init Statements RBRACE .

    $default  reduce using rule 18 (Statement)


State 95

   41 CaseDec: CASE NUM COLON .

    $default  reduce using rule 41 (CaseDec)


State 96

   42 CaseDec: CASE NUM B . COLON

    COLON  shift, and go to state 108


State 97

   28 Statement: SwitchHead CaseList RBRACE SC .

    $default  reduce using rule 28 (Statement)


State 98

   45 Call: CallHeader ID LPAREN RPAREN .

    $default  reduce using rule 45 (Call)


State 99

   44 Call: CallHeader ID LPAREN ExpList . RPAREN

    RPAREN  shift, and go to state 109


State 100

   47 ExpList: Exp .
   48        | Exp . COMMA ExpList
   52 Exp: Exp . AND Exp
   53    | Exp . OR Exp
   54    | Exp . RELOP Exp
   55    | Exp . BINOP Exp

    COMMA  shift, and go to state 110
    OR     shift, and go to state 62
    AND    shift, and go to state 63
    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65

    $default  reduce using rule 47 (ExpList)


State 101

   20 Statement: Type ID ASSIGN Exp . SC
   52 Exp: Exp . AND Exp
   53    | Exp . OR Exp
   54    | Exp . RELOP Exp
   55    | Exp . BINOP Exp

    SC     shift, and go to state 111
    OR     shift, and go to state 62
    AND    shift, and go to state 63
    RELOP  shift, and go to state 64
    BINOP  shift, and go to state 65


State 102

    6 FuncHead: RetType ID LPAREN Func_Scope_init Formals RPAREN .

    $default  reduce using rule 6 (FuncHead)


State 103

   14 FormalsList: FormalDecl COMMA . FormalsList

    INT   shift, and go to state 5
    BYTE  shift, and go to state 6
    BOOL  shift, and go to state 7

    FormalsList  go to state 112
    FormalDecl   go to state 83
    Type         go to state 84


State 104

   15 FormalDecl: Type ID .

    $default  reduce using rule 15 (FormalDecl)


State 105

   25 Statement: IF LPAREN BoolExp RPAREN Scope_init . Statement Scope_end PossibleElse

    INT     shift, and go to state 5
    BYTE    shift, and go to state 6
    BOOL    shift, and go to state 7
    RETURN  shift, and go to state 17
    IF      shift, and go to state 18
    WHILE   shift, and go to state 19
    SWITCH  shift, and go to state 20
    BREAK   shift, and go to state 21
    ID      shift, and go to state 22
    LBRACE  shift, and go to state 23

    ID  [reduce using rule 46 (CallHeader)]

    Statement   go to state 113
    SwitchHead  go to state 26
    Call        go to state 27
    CallHeader  go to state 28
    Type        go to state 29


State 106

   26 Statement: WHILE LPAREN BoolExp RPAREN While_Scope_init . Statement

    INT     shift, and go to state 5
    BYTE    shift, and go to state 6
    BOOL    shift, and go to state 7
    RETURN  shift, and go to state 17
    IF      shift, and go to state 18
    WHILE   shift, and go to state 19
    SWITCH  shift, and go to state 20
    BREAK   shift, and go to state 21
    ID      shift, and go to state 22
    LBRACE  shift, and go to state 23

    ID  [reduce using rule 46 (CallHeader)]

    Statement   go to state 114
    SwitchHead  go to state 26
    Call        go to state 27
    CallHeader  go to state 28
    Type        go to state 29


State 107

   29 SwitchHead: SWITCH LPAREN NumExp RPAREN LBRACE .

    $default  reduce using rule 29 (SwitchHead)


State 108

   42 CaseDec: CASE NUM B COLON .

    $default  reduce using rule 42 (CaseDec)


State 109

   44 Call: CallHeader ID LPAREN ExpList RPAREN .

    $default  reduce using rule 44 (Call)


State 110

   48 ExpList: Exp COMMA . ExpList

    TRUE    shift, and go to state 31
    FALSE   shift, and go to state 32
    NOT     shift, and go to state 34
    ID      shift, and go to state 35
    NUM     shift, and go to state 36
    STRING  shift, and go to state 37
    LPAREN  shift, and go to state 38

    ID  [reduce using rule 46 (CallHeader)]

    Call        go to state 39
    CallHeader  go to state 28
    ExpList     go to state 115
    Exp         go to state 100


State 111

   20 Statement: Type ID ASSIGN Exp SC .

    $default  reduce using rule 20 (Statement)


State 112

   14 FormalsList: FormalDecl COMMA FormalsList .

    $default  reduce using rule 14 (FormalsList)


State 113

   25 Statement: IF LPAREN BoolExp RPAREN Scope_init Statement . Scope_end PossibleElse

    $default  reduce using rule 36 (Scope_end)

    Scope_end  go to state 116


State 114

   26 Statement: WHILE LPAREN BoolExp RPAREN While_Scope_init Statement .

    $default  reduce using rule 26 (Statement)


State 115

   48 ExpList: Exp COMMA ExpList .

    $default  reduce using rule 48 (ExpList)


State 116

   25 Statement: IF LPAREN BoolExp RPAREN Scope_init Statement Scope_end . PossibleElse

    ELSE  shift, and go to state 117

    $default  reduce using rule 30 (PossibleElse)

    PossibleElse  go to state 118


State 117

   31 PossibleElse: ELSE . Scope_init Statement Scope_end

    $default  reduce using rule 35 (Scope_init)

    Scope_init  go to state 119


State 118

   25 Statement: IF LPAREN BoolExp RPAREN Scope_init Statement Scope_end PossibleElse .

    $default  reduce using rule 25 (Statement)


State 119

   31 PossibleElse: ELSE Scope_init . Statement Scope_end

    INT     shift, and go to state 5
    BYTE    shift, and go to state 6
    BOOL    shift, and go to state 7
    RETURN  shift, and go to state 17
    IF      shift, and go to state 18
    WHILE   shift, and go to state 19
    SWITCH  shift, and go to state 20
    BREAK   shift, and go to state 21
    ID      shift, and go to state 22
    LBRACE  shift, and go to state 23

    ID  [reduce using rule 46 (CallHeader)]

    Statement   go to state 120
    SwitchHead  go to state 26
    Call        go to state 27
    CallHeader  go to state 28
    Type        go to state 29


State 120

   31 PossibleElse: ELSE Scope_init Statement . Scope_end

    $default  reduce using rule 36 (Scope_end)

    Scope_end  go to state 121


State 121

   31 PossibleElse: ELSE Scope_init Statement Scope_end .

    $default  reduce using rule 31 (PossibleElse)
